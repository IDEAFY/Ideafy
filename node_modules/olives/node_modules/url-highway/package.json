{
  "name": "url-highway",
  "description": "A url based router based on highway",
  "version": "0.0.3",
  "homepage": "https://github.com/cosmosio/url-highway",
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.github.com/cosmosio/url-highway/master/LICENSE"
    }
  ],
  "files": [
    "LICENSE",
    "index.js"
  ],
  "author": {
    "name": "Olivier Scherrer",
    "email": "pode.fr@gmail.com"
  },
  "keywords": [
    "router",
    "history",
    "url",
    "location",
    "hash"
  ],
  "repository": {
    "type": "git",
    "url": "git@github.com:cosmosio/url-highway.git"
  },
  "bugs": {
    "url": "https://github.com/cosmosio/url-highway/issues"
  },
  "scripts": {
    "test": "jasmine-node test/"
  },
  "main": "index.js",
  "devDependencies": {
    "jasmine-node": "~1.14.3",
    "quick-dom": "0.0.1"
  },
  "dependencies": {
    "highway": "0.0.2",
    "to-array": "~0.1.4"
  },
  "readme": "url-highway\n=============\n\nA url based router. It's based on [Highway](https://github.com/cosmosio/highway), which is a simple and extensible router, and adds it url support. The router can listen to hash changes to navigate to a route, or update the hash when navigating to a new route.\n\nInstallation\n============\n\n```bash\nnpm install url-highway\n```\n\nHow to use\n==========\n\nRequire and initialize A url based router:\n\n```js\nvar Highway = require(\"url-highway\"),\n  highway = new Highway();\n```\nLet's define routes:\n\n```js\nhighway.set(\"route\", function onRouteCalled(param1) {\n    // Do something when navigating to \"route\".\n}, /* scope, optional */);\n\nhighway.set(\"anotherRoute\", function onAnotherRouteCalled(param1, param2, param3) {\n    // Do something when navigating to anotherRoute\n}, /* optional scope*/);\n```\n\nBy default, when navigating to a route, url highway will update the hash:\n\n```js\n// Navigating to \"route\", giving 66 as a parameter. As many parameters as necessary can be given to navigate.\nhighway.navigate(\"route\", 66);\n\n//Then url highway updates the hash:\nwindow.location.hash; // #route/66\n```\n\nWhen navigating to a route with several parameters:\n\n```js\nhighway.navigate(\"anotherRoute\", \"interstate\", 66, \"D.C.\");\n\n// Then the hash will be:\nwindow.location.hash; // #anotherRoute/interstate/66/D.C.\n````\n\nAlso, when the hash is updated (programmatically or from the address bar), to #route/127/MI\n\n```js\nwindow.location.hash = \"#route/127/MI\";\n\n// Will call navigate:\nhighway.navigate(\"route\", \"127\", \"MI\");\n```\n\nHighway's other features are available too:\n====================\n\nRemoving a route:\n\n```js\nvar handle = highway.set(\"route\", ...);\n\nhighway.unset(handle);\n```\n\nNavigating in the history:\n\n```js\nhighway.back();\nhighway.forward();\n\nhighway.go(-2);\n```\n\nLICENSE\n=======\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "url-highway@0.0.3",
  "dist": {
    "shasum": "8ca70565bf14ba2929acad361b8d4408a5c9b91a"
  },
  "_from": "url-highway@0.0.3",
  "_resolved": "https://registry.npmjs.org/url-highway/-/url-highway-0.0.3.tgz"
}
