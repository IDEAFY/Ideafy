/**
 * https://github.com/TAIAUT/Ideafy
 * Proprietary License - All rights reserved
 * Author: Vincent Weyl <vincent.weyl@taiaut.com>
 * Copyright (c) 2012-2013 TAIAUT
 */

define(["OObject","service/config","service/map","Store","Bind.plugin","Event.plugin","service/avatar","service/utils"],function(e,t,n,r,s,o,u,a){return function(){var l=new e,c=new r,h=new r,p=new r([]),d=new r([]),v=t.get("labels"),m=t.get("user"),g=t.get("transport");return l.plugins.addAll({label:new s(v),basicinfo:new s(h,{setAvatar:function(e){var t=document.createDocumentFragment(),n=new u([e]);n.place(t),this.hasChildNodes()?this.replaceChild(t,this.firstChild):this.appendChild(t)}}),ctdetails:new s(c),grades:new s(p,{showBadge:function(e){this.setAttribute("style","background: url('img/profile/"+e+"') no-repeat center center; background-size: cover;")}}),achievements:new s(d,{showBadge:function(e){this.setAttribute("style","background: url('img/profile/"+e+"') no-repeat center center; background-size: cover;")}}),ctdetailsevent:new o(l)}),l.template='<div id = "contactdetails"><div class="header blue-dark"><span class="subjectlbl" data-details="bind:innerHTML, username"></span></div><div class = "detail-contents"><div class = "contactessentials"><div class="avatar" data-basicinfo="bind:setAvatar, userid"></div><div class="basicinfo"><h2 data-basicinfo="bind:innerHTML,username"></h2><p data-basicinfo="bind:innerHTML, intro"></p></div><div class="contactdashboard"><div class="contactstats"><legend data-label="bind:innerHTML, stats"></legend><div class="userscore"><span class="ip" data-ctdetails="bind:innerHTML, ip"></span><span data-label="bind:innerHTML, ideafypoints"></span></div><table><tr class ="myids"><th data-label="bind:innerHTML, ideaslbl"></th><td data-ctdetails="bind: innerHTML, ideas_count"></td></tr><tr class ="myss"><th data-label="bind:innerHTML, sessionslbl"></th><td data-ctdetails="bind: innerHTML, sessions"></td></tr><tr class="myctcts"><th data-label="bind:innerHTML, contactslbl"></th><td data-ctdetails="bind: innerHTML, contacts"></td></tr><tr class="my2q"><th data-label="bind:innerHTML, toquestionslbl"></th><td data-ctdetails="bind: innerHTML, twoquestions_count"></td></tr></table></div><div class="contactbadges"><legend data-label="bind:innerHTML, achievements"></legend><p class="grade" data-stats="bind:innerHTML, title"></p><ul class="badges" data-grades="foreach"><li class="contactbadge"><div data-grades="bind:showBadge, badge"></div><label data-grades="bind:innerHTML, title"></label></li></ul><ul class="badges" data-achievements="foreach"><li class="contactbadge"><div data-achievements="bind:showBadge, badge"></div><label data-achievements="bind:innerHTML, label"></label></li></ul></div></div></div></div><div class = "contactnotes"><legend data-label="bind: innerHTML, mynotes"></legend><div id = "cancelnotes" class="invisible" data-ctdetailsevent="listen:touchstart, push; listen:touchend, cancelNotes"></div><div id = "uploadnotes" class="invisible" data-ctdetailsevent="listen:touchstart, push;listen:touchend, uploadNotes"></div><textarea id="ctnotes" class = "input" data-label="bind:placeholder,writesomething" data-basicinfo="bind: value, notes" data-ctdetailsevent="listen:input, displayNoteBtns"></textarea></div></div></div>',l.place(n.get("contactdetails")),l.updateContact=function(t){var n=m.get("connections"),r,i=n.length,s,o;for(r=0;r<i;r++){n[r].userid===t._id&&(n[r].username=t.username,n[r].firstname=t.firstname,n[r].lastname=t.lastname,n[r].intro=t.intro);if(n[r].type==="group"){s=n[r].contacts;for(o=0;o<s.length;o++)s[o].userid===t._id&&(s[o].username=t.username,s[o].firstname=t.firstname,s[o].lastname=t.lastname,s[o].intro=t.intro);n[r].contacts=s}}m.set("connections",n),m.upload()},l.getUserInfo=function(t){a.getUserDetails(t,function(e){(e.username!==h.get("username")||e.firstname!==h.get("firstname")||e.lastname!==h.get("lastname")||e.intro!==h.get("intro"))&&l.updateContact(e),c.reset(e),c.set("sessions",c.get("su_sessions_count")+c.get("mu_sessions_count")),a.getGrade(e.ip,function(e){p.alter("push",e.grade),e.distinction&&p.alter("push",e.distinction)}),d.reset(e.achievements)})},l.reset=function(t){h.reset(t),p.reset([]),d.reset([]),h.get("notes")||h.set("notes",""),l.getUserInfo(t.userid)},l.displayNoteBtns=function(e,t){document.getElementById("uploadnotes").classList.remove("invisible"),document.getElementById("cancelnotes").classList.remove("invisible")},l.hideNoteBtns=function(t,n){document.getElementById("uploadnotes").classList.add("invisible"),document.getElementById("cancelnotes").classList.add("invisible")},l.push=function(e,t){t.classList.add("pushed")},l.uploadNotes=function(e,t){var n=m.get("connections"),r,i=n.length,s,o,u=document.getElementById("uploadnotes"),a=document.getElementById("cancelnotes");for(r=0;r<i;r++){n[r].userid===h.get("userid")&&(n[r].notes=h.get("notes"));if(n[r].type==="group"){s=n[r].contacts;for(o=0;o<s.length;o++)s[o].userid===h.get("userid")&&(s[o].notes=h.get("notes"));n[r].contacts=s}}m.set("connections",n),m.upload().then(function(){t.classList.remove("pushed"),l.hideNoteBtns()})},l.cancelNotes=function(e,t){var n=m.get("connections"),r=n.length;i;for(i=0;i<r;i++)n[i].userid===h.get("userid")&&h.set("notes",n[i].notes);t.classList.add("pushed"),l.hideNoteBtns()},l}});