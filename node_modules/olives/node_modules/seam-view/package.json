{
  "name": "seam-view",
  "description": "Seam-view is the perfect companion to Seam, the tool to add behavior to your HTML via plugins. Seam view will wrap your template (HTML template or DOM elements) and bind it to seam in an easy to use wrapper that you can attach to the DOM and place wherever you want.",
  "version": "0.0.1",
  "homepage": "https://github.com/flams/seam-view",
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.github.com/flams/seam-view/master/LICENSE"
    }
  ],
  "files": [
    "LICENSE",
    "index.js"
  ],
  "author": {
    "name": "Olivier Scherrer",
    "email": "pode.fr@gmail.com"
  },
  "keywords": [
    "html",
    "behavior",
    "plugin",
    "binding",
    "template",
    "declarative"
  ],
  "repository": {
    "type": "git",
    "url": "git@github.com:flams/seam-view.git"
  },
  "bugs": {
    "url": "https://github.com/flams/seam-view/issues"
  },
  "scripts": {
    "test": "jasmine-node test/"
  },
  "main": "index.js",
  "devDependencies": {
    "jasmine-node": "~1.14.3",
    "quick-dom": "0.0.1"
  },
  "dependencies": {
    "to-array": "~0.1.4",
    "seam": "0.0.3",
    "synchronous-fsm": "0.0.3"
  },
  "readme": "#seam-view\n\n\nSeam-view is the perfect companion to Seam, the tool to add behavior to your HTML via plugins. Seam view will wrap your template (HTML template or DOM elements) and bind it to seam in an easy to use wrapper that you can attach to the DOM and place wherever you want.\n\n##Installation\n\n```bash\nnpm install seam-view\n```\n\n##How to use\n\n###Require seam-view:\n\n```js\nvar SeamView = require(\"seam-view\");\n```\n\n###Initialize SeamView:\n\n```js\nvar seamView = new SeamView();\n```\n\n###Defining the template:\n\nThe template can come from a template string:\n\n```js\nvar template = '<ul data-binding=\"foreach\">' +\n    '<li data-binding=\"bind: innerHTML, value\"></li>' +\n'</ul>';\n```\n\n###Adding the Seam plugins\n\nAnd we can add our plugins to Seam.\n\n```js\nseamView.seam.addAll({\n    binding: new DataBinding(collection)\n});\n```\n\n###Assigning the template:\n\nThen we can add it to our SeamView:\n\n```js\nseamView.template = template;\n```\n\n###Rendering the seamView\n\nWhen we're ready to render the view, seamView will transform our text HTML into some DOM elements and also bind the JS behavior to the HTML, if we've added the plugins to Seam.\n\n```js\nseamView.render();\n```\n\n###Placing the seamView in the dom\n\nWe now have rendered the view and the plugins have been applied to the DOM. We can place our view whenever we're ready:\n\n```js\nseamView.place(document.querySelector(\"main\"));\n```\n\n_Note :_ if place is called before render(), then seamView will do the render for us.\n\n###Now, if the template is already a DOM element present in the DOM\n\nThen we can directly make the DOM 'alive', i.e. attaching the JS behavior to the DOM via seam, by calling seamView.alive().\n\n```html\n<ul data-binding=\"foreach\">\n    <li data-binding=\"bind: innerHTML, value\"></li>\n</ul>\n```\n\n```js\nseamView.alive(document.querySelector(\"ul\"));\n```\n\n###Moving seamView around:\n\nSeamView is now a rendered view, and moving it around is as easy as calling place() again. The behavior will remain attached to the dom.\n\n```js\nseamView.place(document.querySelector(\".anotherPlace\"));\n```\n\n\nLICENSE\n=======\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "seam-view@0.0.1",
  "dist": {
    "shasum": "ddfd0808a0a27a6e824c7bf8095b881d88691676"
  },
  "_from": "seam-view@0.0.1",
  "_resolved": "https://registry.npmjs.org/seam-view/-/seam-view-0.0.1.tgz"
}
