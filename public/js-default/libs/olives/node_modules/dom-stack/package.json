{
  "name": "dom-stack",
  "description": "Create a stack of DOM elements. You can add/remove elements, reorder them, hide/show the elements, transit between them, or move them all together.",
  "version": "0.0.1",
  "homepage": "https://github.com/cosmosio/dom-stack",
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.github.com/cosmosio/dom-stack/master/LICENSE"
    }
  ],
  "files": [
    "LICENSE",
    "index.js"
  ],
  "author": {
    "name": "Olivier Scherrer",
    "email": "pode.fr@gmail.com"
  },
  "keywords": [
    "dom",
    "stack",
    "hide",
    "show",
    "transit"
  ],
  "repository": {
    "type": "git",
    "url": "git@github.com:cosmosio/dom-stack.git"
  },
  "bugs": {
    "url": "https://github.com/cosmosio/dom-stack/issues"
  },
  "scripts": {
    "test": "jasmine-node test/"
  },
  "main": "index.js",
  "devDependencies": {
    "jasmine-node": "~1.14.3",
    "quick-dom": "0.0.1"
  },
  "dependencies": {
    "to-array": "~0.1.4"
  },
  "readme": "#DOM Stack\n\n\nCreate a stack of DOM elements. You can hide/show the elements, transit between them, or move them all together.\n\n##Installation\n\n```bash\nnpm install dom-stack\n```\n\n##How to use\n\n###Initialize\n\nRequire and initialize dom-stack:\n\n```js\nvar Stack = require(\"dom-stack\"),\n  stack = new Stack();\n```\n\nLet's say that we have five dom elements:\n\n```js\nvar sections = document.querySelectorAll(\"section\");\nvar dom1 = sections[0];\nvar dom2 = sections[1];\nvar dom3 = sections[2];\nvar dom3 = sections[3];\nvar dom3 = sections[4];\n```\n\n###Add dom elements\n\nYou can add the dom elements. They will be removed from their current position in the DOM and be added to the stack.\n\n```js\nstack.add(dom1);\nstack.add(dom2);\nstack.add(dom3);\nstack.add(dom4);\nstack.add(dom5);\n```\n\n###Remove dom elements\n\nYou can remove dom elements from the stack:\n\n```js\nstack.remove(dom4);\nstack.remove(dom5);\n```\n\n###Place the stack\n\nYou can attach the stack to a parent element. All the elements from the stack will be appended to main, in the same order that they were added. You can call place again to attach the stack to another dom element.\n\n```js\nstack.place(document.querySelector(\"main\"));\n```\n\n###Reorder dom elements:\n\nThen you can reorder the elements.\n\n```js\nstack.up(dom2); // the order will be: dom2, dom1, dom3\nstack.down(dom1); // the order will be: dom2, dom3, dom1\n```\n\nOr you can move a dom element directly to a new location:\n\n```js\nstack.move(dom3, 0); // the order will be: dom3, dom2, dom1\n```\n\n###Insert new dom elements\n\nLet's reinsert the dom elements that we previously removed:\n\n```js\nstack.insert(dom4, 0); // the order will be: dom4, dom3, dom2, dom1;\nstack.insert(dom5, 3); // the order will be: dom4, dom3, dom2, dom5, dom1;\n```\n\nYou can now where a dom element is at anytime, and how many dom elements you have:\n\n```js\nstack.getPosition(dom5); // 3\nstack.count(); // 5\n```\n\n###Hiding/showing elements\n\nYou can hide/show dom elements. The elements are not actually hidden, but totally removed from the DOM for performance reason.\n\n```js\nstack.hide(dom4); // will hide dom4 by removing it from the dom.\n```\n\nWhen showing the element, it will be added back to the dom:\n\n```js\nstack.show(dom4);\n```\n\nThere's a short cut for hiding/showing them all:\n\n```js\nstack.hideAll();\nstack.showAll();\n```\n\n##Transit to a dom element\n\nIf you hide all elements but then show just one of them:\n\n```js\nstack.hideAll();\nstack.show(dom1);\n```\n\nYou can then transit to another dom element, which will hide the previous one and show the new one:\n\n```js\nstack.transit(dom2); // will hide dom1 and show dom2\n```\n\n\nLICENSE\n=======\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "dom-stack@0.0.1",
  "_from": "dom-stack@0.0.1"
}
