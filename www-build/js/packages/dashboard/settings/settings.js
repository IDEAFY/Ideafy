/**
 * https://github.com/TAIAUT/Ideafy
 * Proprietary License - All rights reserved
 * Author: Vincent Weyl <vincent.weyl@taiaut.com>
 * Copyright (c) 2012-2013 TAIAUT
 */

define(["Olives/OObject","service/map","Olives/Model-plugin","Olives/Event-plugin","service/config","Store","service/utils"],function(e,t,n,r,i,s,o){return function(){var a=new e,f=i.get("labels"),l=[{name:f.get("public"),dest:"#public"},{name:f.get("library"),dest:"#library"},{name:f.get("brainstorm"),dest:"#brainstorm"},{name:f.get("connect"),dest:"#connect"},{name:f.get("dashboard"),dest:"#dahsboard"}],c=[{name:f.get("everymin"),value:6e4},{name:f.get("everyfive"),value:3e5},{name:f.get("everyfifteen"),value:9e5},{name:f.get("never"),value:864e5}],h=new s({screens:l,timers:c,pwd:"",pwdbis:"",lang:[],pwdchange:""}),p=new s,d=i.get("transport"),v=i.get("user");return a.plugins.addAll({label:new n(f),options:new n(h,{setLang:function(e){var t,n,r="";for(t=0,n=e.length;t<n;t++)r+="<option>"+e[t]+"</option>";this.innerHTML=r,this.selectedIndex=e.indexOf(v.get("lang"))},setStartupScreen:function(e){var t,n,r="",i,s;for(t=0,n=e.length;t<n;t++)r+="<option>"+e[t].name+"</option>",e[t].dest===v.get("settings").startupScreen&&(s=t);this.innerHTML=r,this.selectedIndex=s},setPollingInterval:function(e){var t,n,r="",i,s;for(t=0,n=e.length;t<n;t++)r+="<option>"+e[t].name+"</option>",e[t].value===v.get("settings").polling_interval&&(s=t);this.innerHTML=r,this.selectedIndex=s}}),settings:new n(p),settingsevent:new r(a)}),a.template='<div id="dashboard-settings"><div class="header blue-dark"><span data-label="bind:innerHTML, settingslbl"></span></div><div class="settingscontent"><div class="settingmodule"><legend data-label="bind:innerHTML, userpref"></legend><ul><li><span data-label="bind:innerHTML, setlang"></span><select data-options="bind:setLang, lang" data-settingsevent="listen: change, updateLang"></select></li><li class="startupscreen"><span data-label="bind: innerHTML, choosestartup"></span><select data-options="bind:setStartupScreen, screens" data-settingsevent="listen: change, updateStartup"></select></li><li class="startupscreen"><span data-label="bind: innerHTML, choosepolling"></span><select data-options="bind:setPollingInterval, timers" data-settingsevent="listen: change, updatePollingInterval"></select></li><li class="setting-input"><input type="checkbox" data-settings="bind: checked, showTips" data-settingsevent="listen: change, showTips"><label data-label="bind:innerHTML, showtips"></label></li><li class="setting-input"><input type="checkbox" data-settings="bind: checked, notifyPopup" data-settingsevent="listen: change, showNotif"><label data-label="bind:innerHTML, shownotif"></label></li><li class="setting-input"><input type="checkbox" data-settings="bind: checked, useascharacter" data-settingsevent="listen: change, useAsChar"><label data-label="bind:innerHTML, usechar"></label></li><li><span data-label="bind: innerHTML, changepwd"></span><input class="input" type="password" data-label="bind:placeholder, passwordplaceholder" data-options="bind: value, pwd" data-settingsevent="listen: input, clearOK"><input class="input" type="password" data-label="bind:placeholder, repeatpasswordplaceholder" data-options="bind: value, pwdbis" data-settingsevent="listen: input, clearOK"><span class="changeok" data-options="bind: innerHTML, pwdchange"></span><div class="next-button" data-label="bind:innerHTML, changelbl" data-settingsevent="listen: mousedown, press; listen:mouseup, changePWD"></div></li></ul></div><div class="settingmodule invisible"><legend data-label="bind:innerHTML, brainstormsettings"></legend><ul><li>Select deck</li><li>Set timers</li><li>Automatic card draws</li></ul></div></div></div>',a.place(t.get("dashboard-settings")),a.updateLang=function(t,n){n.value!==v.get("lang")&&o.updateLabels(n.value).then(function(){v.set("lang",n.value),v.upload(),h.set("timers",[{name:f.get("everymin"),value:6e4},{name:f.get("everyfive"),value:3e5},{name:f.get("everyfifteen"),value:9e5},{name:f.get("never"),value:864e5}]),h.set("screens",[{name:f.get("public"),dest:"#public"},{name:f.get("library"),dest:"#library"},{name:f.get("brainstorm"),dest:"#brainstorm"},{name:f.get("connect"),dest:"#connect"},{name:f.get("dashboard"),dest:"#dahsboard"}])})},a.updateStartup=function(t,n){var r=n.selectedIndex,i=v.get("settings");i.startupScreen=l[r].dest,v.set("settings",i),v.upload()},a.updatePollingInterval=function(t,n){var r=n.selectedIndex,i=v.get("settings");i.polling_interval=c[r].value,v.set("settings",i),v.upload()},a.showTips=function(e,t){var n=v.get("settings");n.showTips=t.checked,v.set("settings",n),v.upload().then(function(){console.log("upload successful")})},a.showNotif=function(e,t){var n=v.get("settings");n.showNotif=t.checked,v.set("settings",n),v.upload()},a.useAsChar=function(e,t){var n=v.get("settings");n.useascharacter=t.checked,v.set("settings",n),v.upload()},a.press=function(e,t){t.classList.add("pressed")},a.clearOK=function(e,t){h.set("pwdchange","")},a.changePWD=function(e,t){t.classList.remove("pressed"),h.get("pwd")!==h.get("pwdbis")?h.set("pwdbis",""):d.request("ChangePWD",{userid:v.get("_id"),pwd:h.get("pwd")},function(e){e==="ok"&&h.set("pwdchange","&#10003;")})},p.reset(v.get("settings")),v.watchValue("settings",function(e){p.reset(v.get("settings"))}),d.request("GetLanguages",{},function(e){h.set("lang",e)}),a}});