{
  "name": "grunt-compass",
  "description": "A custom grunt.js task that executes compass compile for you and prints the COMPASS output to grunt.log.write().",
  "version": "0.3.0",
  "homepage": "https://github.com/kahlil/grunt-compass",
  "author": {
    "name": "Kahlil Lechelt",
    "email": "kahlil@kahlil.co",
    "url": "http://kahlil.co"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/kahlil/grunt-compass.git"
  },
  "bugs": {
    "url": "https://github.com/kahlil/grunt-compass/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/kahlil/grunt-compass/blob/master/LICENSE-MIT"
    }
  ],
  "main": "grunt.js",
  "bin": {
    "grunt-compass": "bin/grunt-compass"
  },
  "engines": {
    "node": "*"
  },
  "dependencies": {},
  "devDependencies": {
    "grunt": ">=0.3.7"
  },
  "keywords": [
    "grunt.js",
    "sass",
    "compass",
    "grunt",
    "gruntplugin"
  ],
  "readme": "# grunt-compass\n\nThis is a custom grunt.js multitask aka [gruntplugin](http://jsfiddle.net/cowboy/qzRjD/show/) that executes `compass compile` on the command line for you and prints the COMPASS output to `grunt.log.write()`.\n\n## Dependencies\n\nYou need to have [node.js](http://nodejs.org/), [grunt.js](https://github.com/cowboy/grunt), [Ruby](http://www.ruby-lang.org/), [SASS](http://sass-lang.com/) and [Compass](http://compass-style.org/) installed for this to work.\n\n## Installation & Options\n\n1. Install this grunt plugin next to your project's grunt.js gruntfile with: `npm install grunt-compass`.\n2. Call `grunt.loadNpmTasks('grunt-compass')` in your gruntfile.\n3. Configure `grunt watch` to watch your scss files and call the task(s).\n\te.g.:\n\n\t```javascript\n\twatch: {\n\t    files: ['assets/scss/*.scss'],\n\t    tasks: ['compass:dev', 'compass:prod']\n\t}\n\t```\n\n4. Setup your SASS and CSS paths\n\n\t```javascript\n    src: 'assets/scss',\n    dest: 'assets/css'\n\t```\n\n\t`src` is the folder with sass or scss files and `dest` is the folder where the css files will be placed.\n\n5. You can set your custom output style like this:\n\n    ```javascript\n    outputstyle: 'compressed'\n    ```\n6. You can disable line comments like this:\n\n    ```javascript\n    linecomments: false\n    ```\n7. If you have multiple compass tasks and you want to force compass compilation you can do this:\n\n    ```javascript\n    forcecompile: true\n    ```\n8. You can require a given ruby library before running commands like this:\n\n    ```javascript\n    require: 'animate-sass mylib'\n    ```\n\n9. You can add the `--debug-info` option for use with [FireSass](https://addons.mozilla.org/en-US/firefox/addon/firesass-for-firebug/) like so:\n\n    ```javascript\n    debugsass: true\n    ```\n\n10. You can set the relative assets to `true` and set an image path for the Compass spriting feature:\n\n    ```javascript\n    images: '/path/to/images',\n    relativeassets: true\n    ```\n\n11. You can run compass with bundle exec if you need to as well:\n\n    ```javascript\n    bundleExec: true\n    ```\n\n12. If you have a Compass configuration file, you can use it instead of or in addition to the options in your gruntfile:\n\n    ```javascript\n    config: '/path/to/config'\n    ```\n\n    If the path is not absolute, it is relative to the directory containing your gruntfile.\n\n13. If you have a Compass configuration file, you set the environment variable for the config.rb file:\n\n    ```javascript\n    environment: 'production'\n    ```\n\n    Then use it in your config.rb like so:\n\n    ```ruby\n    output_style = (environment == :production) ? :compressed : :expanded\n    ```\n\n13. New task: compass-clean\n\nSometimes it can be faster to execute `compass clean` and recompile for production instead of doing `--force` compile.\nNow grunt-compass comes with a `grunt compass-clean` task that you can use when registering prod tasks in your gruntfile like:\n\n```js\ngrunt.registerTask('prod', ['compass-clean', 'compass:prod']);\n```\n\n14. Run \"grunt watch\" and edit some SASS files :)\n\n# An Example Setup\n\n```javascript\ncompass: {\n    dev: {\n        src: 'assets/scss',\n        dest: 'assets/dev/css',\n        linecomments: true,\n        forcecompile: true,\n        require: 'animate-sass mylib',\n        debugsass: true,\n        images: '/path/to/images',\n        relativeassets: true\n    },\n    prod: {\n        src: 'assets/scss',\n        dest: 'assets/prod/css',\n        outputstyle: 'compressed',\n        linecomments: false,\n        forcecompile: true,\n        require: 'animate-sass mylib',\n        debugsass: false,\n        images: '/path/to/images',\n        relativeassets: true\n    }\n}\n```\n\n# Real World Examples\n\n* [krzysu](https://github.com/krzysu) posted a Gist with his `compass compile` configuration [over here](https://gist.github.com/2917330).\n* [javiervd](https://github.com/javiervd) kindly shares his grunt.js setup [over here](https://gist.github.com/2941501).\n\n# Changelog\n\nv0.2.14: @[nebelschwade](https://github.com/nebelschwade) added `fonts-dir` option and fixed issue with config.rb due to changes in last version.\n\nv0.2.13: Added `grunt.template.process()` function to process `src` and `dest` paths. Suggested by @[necolas](https://github.com/necolas) in issue #9.\n\nv0.2.12: The option to set the image path for spriting and the relativeassets to true have been added by @[gcpantazis](https://github.com/gcpantazis).\n\nv0.2.11: @[gcpantazis](https://github.com/gcpantazis) added the option to set the `--debug-info` flag for Sass, useful for integration with the FireSass debugger.\n\nv0.2.10: Added 'gruntplugin' as a keyword in the package.json to get listed [here](http://jsfiddle.net/cowboy/qzRjD/show/).\n\nv0.2.9: Ability to require a given ruby lib before running commands. Added by @[FGRibreau](https://github.com/FGRibreau).\n\nv0.2.8: Added an option to force compilation of SASS files via the `--force` option.\n\n----\n\n# LICENSE MIT\n\nCopyright (c) 2012 Kahlil Lechelt\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n",
  "_id": "grunt-compass@0.3.0",
  "dist": {
    "shasum": "49416476b4f26b423d492f0f207bb2a194df12c2"
  },
  "_from": "grunt-compass"
}
