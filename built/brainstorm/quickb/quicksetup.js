/**
 * https://github.com/TAIAUT/Ideafy
 * Proprietary License - All rights reserved
 * Author: Vincent Weyl <vincent.weyl@taiaut.com>
 * Copyright (c) 2012-2013 TAIAUT
 */

define(["OObject","service/map","Bind.plugin","Event.plugin","service/config","CouchDBDocument","Store","Promise","service/cardpopup","service/help","service/utils","lib/spin.min"],function(e,t,i,s,n,a,r,o,c,d,l,u){return function(p,g,m,h,v){var b,f,w=new e,y=t.get("quicksetup"),L=n.get("labels"),S=n.get("transport"),k=n.get("db"),T=(n.get("user"),{}),x=new r({timer:null,display:!1}),q=new r({"char":{selected:!1,left:null,popup:!1},context:{selected:!1,left:null,popup:!1},problem:{selected:!1,left:null,popup:!1}}),M=new r({"char":{id:"",title:L.get("char"),pic:""},context:{id:"",title:L.get("context"),pic:""},problem:{id:"",title:L.get("problem"),pic:""}}),A={"char":0,context:0,problem:0},I=!0,_={"char":new r,context:new r,problem:new r},N="",H=null,P=0,C="step",O=new u({color:"#657B99",lines:10,length:8,width:4,radius:8,top:373,left:373}).spin();return w.plugins.addAll({labels:new i(L),quicksetup:new i(q,{setReload:function(e){0===e?this.classList.add("reload"):this.classList.remove("reload")},updateNext:function(){q.get("char").selected&&q.get("context").selected&&q.get("problem").selected?this.classList.remove("invisible"):this.classList.add("invisible")},popup:function(e){e?this.classList.add("highlighted"):this.classList.remove("highlighted")},setSelected:function(e){e?this.classList.add("pushed"):this.classList.remove("pushed")}}),quicksetuptimer:new i(x,{setTime:function(e){this.innerHTML=l.formatDuration(e)},displayTimer:function(e){e?this.classList.add("showtimer"):this.classList.remove("showtimer")}}),quicksetupcards:new i(M,{removeDefault:function(e){e?this.classList.remove("defaultcard"):this.classList.add("defaultcard")},formatTitle:function(e){this.innerHTML=e?e.substring(0,1).toUpperCase()+e.substring(1).toLowerCase():e},setPic:function(e){var t=this;e?e.search("img/decks")>-1?this.setAttribute("style","background-image:url('"+e+"');"):(json={dir:"cards",filename:e},n.get("transport").request("GetFile",json,function(e){t.setAttribute("style","background:white; background-image: url('"+e+"'); background-repeat: no-repeat; background-position: center center; background-size:contain;")})):this.setAttribute("style","background-image: none;")}}),quicksetupevent:new s(w)}),w.template='<div id = "quicksetup"><div class="previousbutton" data-quicksetupevent="listen: touchstart, press; listen: touchstart, prev"></div><div id="quicksetup-popup" class="invisible"></div><div class="brainstorm-header header blue-light" data-labels="bind: innerHTML, quicksetup" data-quicksetupevent="listen:touchstart, toggleProgress"></div><div class="timer" data-quicksetuptimer="bind:setTime, timer; bind: displayTimer, display" data-quicksetupevent="listen:touchstart,toggleTimer"></div><div class="help-brainstorm" data-quicksetupevent="listen:touchstart, help"></div><div class="drawarea"><div class="decks"><div class="drawbutton drawchar" name="char" data-quicksetupevent="listen: touchstart, push; listen:touchend, draw" data-quicksetup="bind: setReload, char.left"></div><div class="drawbutton drawcontext" name="context" data-quicksetupevent="listen: touchstart, push; listen:touchend, draw" data-quicksetup="bind:setReload, context.left"></div><div class="drawbutton drawproblem" name="problem" data-quicksetupevent="listen: touchstart, push; listen:touchend, draw" data-quicksetup="bind:setReload, problem.left"></div></div><div class="cards"><div class="card char defaultcard" name="char" data-quicksetupevent="listen:touchstart, zoom" data-quicksetupcards="bind:removeDefault, char.pic" data-quicksetup="bind: popup, char.popup"><div class="cardpicture" data-quicksetupcards="bind: setPic, char.pic"></div><div class="cardtitle" data-quicksetupcards="bind:formatTitle, char.title">Character</div></div><div class="card context defaultcard" name="context" data-quicksetupevent="listen:touchstart, zoom" data-quicksetupcards="bind:removeDefault, context.pic" data-quicksetup="bind: popup, context.popup"><div class="cardpicture" data-quicksetupcards="bind: setPic, context.pic"></div><div class="cardtitle" data-quicksetupcards="bind:formatTitle, context.title">Context</div></div><div class="card problem defaultcard" name="problem" data-quicksetupevent="listen:touchstart, zoom" data-quicksetupcards="bind:removeDefault, problem.pic" data-quicksetup="bind: popup, problem.popup"><div class="cardpicture" data-quicksetupcards="bind: setPic, problem.pic"></div><div class="cardtitle" data-quicksetupcards="bind:formatTitle, problem.title">Problem</div></div></div><div class="confirmdraw"><div class="drawok" name="char" data-quicksetup="bind:setSelected, char.selected" data-quicksetupevent="listen: touchstart, push; listen:touchend, accept"></div><div class="drawok" name="context" data-quicksetup="bind:setSelected, context.selected" data-quicksetupevent="listen: touchstart, push; listen:touchend, accept"></div><div class="drawok" name="problem" data-quicksetup="bind:setSelected, problem.selected" data-quicksetupevent="listen: touchstart, push; listen:touchend, accept"></div></div><div class="next-button invisible" data-labels="bind:innerHTML, nextbutton" data-quicksetupevent="listen: touchstart, press; listen:touchend, next" data-quicksetup="bind:updateNext, char.selected;bind:updateNext, context.selected;bind:updateNext, problem.selected"></div></div></div>',w.place(y),w.press=function(e,t){t.classList.add("pressed")},w.next=function(e,t){O.spin(t.parentNode),t.classList.add("invisible"),t.classList.remove("pressed"),"step"===C?(C="screen",g.set("characters",M.get("char")),g.set("contexts",M.get("context")),g.set("problems",M.get("problem")),clearInterval(f),x.set("display",!0),w.updateSessionScore(x.get("timer")).then(function(){return p.unsync(),p.sync(n.get("db"),p.get("_id"))}).then(function(){p.set("elapsedTimers",{quicksetup:x.get("timer")}),p.set("characters",[M.get("char").id]),p.set("contexts",[M.get("context").id]),p.set("problems",[M.get("problem").id]),h("quicksetup")})):h("quicksetup")},w.stopSpinner=function(){O.stop(),w.dom.querySelector(".next-button").classList.remove("invisible")},w.help=function(){d.setContent("quicksetuphelp"),document.getElementById("cache").classList.add("appear"),document.getElementById("help-popup").classList.add("appear")},w.prev=function(e,t){t.classList.remove("pressed"),m("quicksetup")},w.toggleProgress=function(){v()},w.toggleTimer=function(){x.set("display",!x.get("display"))},w.push=function(e,t){"screen"!==C&&t.classList.add("pushed")},w.draw=function(e,t){var i=t.getAttribute("name"),s=q.get(i);_now=new Date,"step"===C&&I&&(0===s.left&&(T[i]=g.get("deck")[i].concat(),s.left=T[i].length,q.set(i,s)),s.selected&&alert("please unlock selected card first"),I&&!s.selected&&(I=!1,s.selected===!1?w.drawCard(i).then(function(){var e=!1;t.classList.remove("pushed"),I=!0,q.loop(function(t){t.popup===!0&&(e=!0)}),e&&w.setPopup(i)}):(t.classList.remove("pushed"),I=!0)))},w.accept=function(e,t){var i=t.getAttribute("name"),s=q.get(i);"step"===C&&(M.get(i).id?s.selected?(s.selected=!1,q.set(i,s)):(s.selected=!0,q.set(i,s)):(s.selected=!1,q.set(i,s)))},w.zoom=function(e,t){var i=t.getAttribute("name");w.setPopup(i)},w.setPopup=function(e){var t={x:0,y:337},i="left",s=q.get(N)||"",n=q.get(e);s&&(s.popup=!1,q.set(N,s)),n.popup=!0,q.set(e,n),N=e,"char"===e&&(t.x=382),"context"===e&&(t.x=102,i="right"),"problem"===e&&(t.x=249,i="right"),_[e].getNbItems()&&b.reset(_[e].toJSON(),t,i,document.getElementById("quicksetup-popup"))},w.closePopup=function(){var e=q.get(N);e.popup=!1,q.set(N,e),N=""},b=new c(w.closePopup),w.initTimer=function(e){var t=new Date,i=t.getTime(),s=e||0;x.set("display",!1),x.set("timer",s),"quicksetup"===p.get("step")&&(f=setInterval(function(){var e=new Date;x.set("timer",s+e.getTime()-i)},1e3))},w.reset=function(e){C="step",e?(P=p.get("elapsedTimers").quicksetup||0,p.get("characters").length?(C="screen",q.reset({"char":{selected:!0,left:1,popup:!1},context:{selected:!0,left:1,popup:!1},problem:{selected:!0,left:1,popup:!1}}),N="",x.set("timer",P),x.set("display",!0),w.getDeck(p.get("deck")).then(function(){return w.getCard(p.get("characters")[0],_.char)}).then(function(){var e=_.char;return M.set("char",{id:e.get("_id"),title:e.get("title"),pic:e.get("picture_file")}),g.set("characters",M.get("char")),w.getCard(p.get("contexts")[0],_.context)}).then(function(){var e=_.context;return M.set("context",{id:e.get("_id"),title:e.get("title"),pic:e.get("picture_file")}),g.set("contexts",M.get("context")),w.getCard(p.get("problems")[0],_.problem)}).then(function(){var e=_.problem;M.set("problem",{id:e.get("_id"),title:e.get("title"),pic:e.get("picture_file")}),g.set("problems",M.get("problem"))})):(w.init(),w.initTimer(P))):w.init()},w.getDeck=function(e){var t=new o,i=new a;return i.setTransport(S),i.sync(k,e).then(function(){var e,s={},a=n.get("user").get("lang");e=i.get("default_lang")&&i.get("default_lang")!==a?i.get("translations")&&i.get("translations")[a]?i.get("translations")[a]:JSON.parse(i.toJSON()):JSON.parse(i.toJSON()),s.char=e.content.characters,s.context=e.content.contexts,s.problem=e.content.problems,s.techno=e.content.techno,["char","context","problem","techno"].forEach(function(e){"newcard"===s[e][0]&&s[e].shift()}),g.set("deck",s),t.fulfill(),setTimeout(function(){i.unsync()},2e3)}),t},w.getCard=function(e,t){var i=new o,s=new a;return s.setTransport(S),s.sync(k,e).then(function(){t.reset(JSON.parse(s.toJSON())),i.fulfill(),s.unsync()}),i},w.drawCard=function(e){var t=new o,i=q.get(e),s=M.get(e),n=Math.floor(Math.random()*T[e].length),a=T[e][n];return w.getCard(a,_[e]).then(function(){var r=_[e];A[e]++,T[e].splice(n,1),s.id=a,s.title=r.get("title"),s.pic=r.get("picture_file"),M.set(e,s),i.left=T[e].length,q.set(e,i),t.fulfill()}),t},w.updateSessionScore=function(e){var t=new o,i={sid:p.get("_id"),step:"quicksetup",time:e,cards:A.char+A.context+A.problem};return S.request("UpdateSessionScore",i,function(e){"ok"===e.res?t.fulfill():t.reject()}),t},w.init=function(){w.getDeck(n.get("user").get("active_deck")).then(function(){var e=g.get("deck");T.char=e.char.concat(),T.context=e.context.concat(),T.problem=e.problem.concat(),A.char=0,A.context=0,A.problem=0,_={"char":new r,context:new r,problem:new r},N="",I=!0,H=null,M.reset({"char":{id:"",title:L.get("char"),pic:""},context:{id:"",title:L.get("context"),pic:""},problem:{id:"",title:L.get("problem"),pic:""}}),q.reset({"char":{selected:!1,left:null,popup:!1},context:{selected:!1,left:null,popup:!1},problem:{selected:!1,left:null,popup:!1}})})},w}});