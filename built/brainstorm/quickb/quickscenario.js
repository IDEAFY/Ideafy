/**
 * https://github.com/TAIAUT/Ideafy
 * Proprietary License - All rights reserved
 * Author: Vincent Weyl <vincent.weyl@taiaut.com>
 * Copyright (c) 2012-2013 TAIAUT
 */

define(["OObject","service/map","Bind.plugin","Event.plugin","service/config","Store","CouchDBDocument","service/cardpopup","../whiteboard/whiteboard","Promise","service/utils","lib/spin.min"],function(e,t,i,s,n,a,r,o,c,d,l,u){return function(p,g,m,h,v){var b,f,w,y=new e,L=n.get("labels"),S=new a,k=new a,T=new a,x=new a({"char":{id:"",title:"",pic:""},context:{id:"",title:"",pic:""},problem:{id:"",title:"",pic:""}}),q={cardpopup:{"char":!1,context:!1,problem:!1},postit:"inactive","import":"inactive",drawing:"inactive",ready:!1,showstory:!1,shownext:!1,readonly:!1},M=new a(q),A=new a({timer:null,display:!1}),I=new a({title:"",story:"",solution:""}),H=new a([]),_=new c("scenario",H,M),N=0,P="step",C=n.get("transport"),O=new u({color:"#657B99",lines:10,length:8,width:4,radius:8,top:665,left:690}).spin();return y.plugins.addAll({labels:new i(L,{setPlaceholder:function(e){this.setAttribute("placeholder",e)}}),cards:new i(x,{formatTitle:function(e){e&&(this.innerHTML=e.substring(0,1).toUpperCase()+e.substring(1).toLowerCase())},setPic:function(e){var t=this;e?e.search("img/decks")>-1?this.setAttribute("style","background-image:url('"+e+"');"):(json={dir:"cards",filename:e},n.get("transport").request("GetFile",json,function(e){t.setAttribute("style","background:white; background-image: url('"+e+"'); background-repeat: no-repeat; background-position: center center; background-size:contain;")})):this.setAttribute("style","background-image: none;")}}),wbtools:new i(M,{setActive:function(e){"active"===e?this.classList.add("pushed"):this.classList.remove("pushed")},setReady:function(e){e?this.classList.remove("invisible"):this.classList.add("invisible")},toggleToolbox:function(e){e?this.classList.add("invisible"):this.classList.remove("invisible")},setReadonly:function(e){e?this.setAttribute("readonly","readonly"):this.removeAttribute("readonly")},popup:function(e){e?this.classList.add("highlighted"):this.classList.remove("highlighted")}}),quickscenariotimer:new i(A,{setTime:function(e){e&&(this.innerHTML=l.formatDuration(e))},displayTimer:function(e){e?this.classList.add("showtimer"):this.classList.remove("showtimer")}}),scenario:new i(I),wbstack:_,quickscenarioevent:new s(y)}),y.template='<div id = "quickscenario"><div class="previousbutton" data-quickscenarioevent="listen: touchstart, press; listen: touchstart, prev"></div><div class="brainstorm-header header blue-light" data-labels="bind: innerHTML, quickscenario" data-quickscenarioevent="listen:touchstart, toggleProgress"></div><div class="timer" data-quickscenariotimer="bind:setTime, timer; bind: displayTimer, display" data-quickscenarioevent="listen:touchstart,toggleTimer"></div><div id="quickscenario-left" class="leftarea"><div class = "card char" data-wbtools="bind:popup,cardpopup.char" name="char" data-quickscenarioevent="listen:touchstart, zoom"><div class="cardpicture" data-cards="bind:setPic,char.pic"></div><div class="cardtitle" data-cards="bind:formatTitle,char.title">Character</div></div><div class="card context" name="context" data-wbtools="bind: popup,cardpopup.context" data-quickscenarioevent="listen:touchstart, zoom"><div class="cardpicture" data-cards="bind:setPic,context.pic"></div><div class="cardtitle" data-cards="bind: formatTitle,context.title">Context</div></div><div class="card problem" name="problem" data-wbtools="bind:popup, cardpopup.problem" data-quickscenarioevent="listen:touchstart, zoom"><div class="cardpicture" data-cards="bind:setPic,problem.pic"></div><div class="cardtitle" data-cards="bind:formatTitle,problem.title">Problem</div></div></div><div id="quickscenario-popup"></div><div id="quickscenario-right" class="workarea"><div id="scenario-whiteboard" class="whiteboard"><div class="stack" data-wbstack="destination"></div></div><div id="toolbox" data-wbtools="bind:toggleToolbox, showstory"><div class="toolbox-button"><div class="postit-button" name="postit" data-wbtools="bind:setActive, postit" data-quickscenarioevent="listen: touchstart, push; listen:touchend, post"></div><legend data-labels="bind:innerHTML, post">Post-it</legend></div><div class="toolbox-button"><div class="importpic-button" name="import" data-wbtools="bind:setActive, import" data-quickscenarioevent="listen: touchstart, push; listen:touchend, importpic"></div><legend data-labels="bind:innerHTML, import">Import pictures</legend></div><div class="toolbox-button"><div class="drawingtool-button" name="drawing" data-wbtools="bind:setActive, drawing" data-quickscenarioevent="listen: touchstart, push; listen:touchend, draw"></div><legend data-labels="bind:innerHTML, draw">Drawing tool</legend></div></div><div class="finish-button invisible" data-wbtools="bind:setReady, ready" data-labels="bind:innerHTML, finishbutton" data-quickscenarioevent="listen: touchstart, press; listen:touchend, finish"></div><div id = "quickscenario-writeup" class="writeup invisible" data-wbtools="bind: setReady,showstory"><textarea class = "enterTitle" maxlength="30" data-labels="bind:setPlaceholder, storytitleplaceholder" data-scenario="bind:value, title" data-wbtools="bind:setReadonly, readonly"></textarea><div class="setPrivate"></div><div class="setPublic"></div><textarea class = "enterDesc" data-labels="bind:setPlaceholder, storydescplaceholder" data-scenario="bind:value, story" data-wbtools="bind:setReadonly, readonly"></textarea><textarea class = "enterSol" data-labels="bind:setPlaceholder, storysolplaceholder" data-scenario="bind:value, solution" data-wbtools="bind:setReadonly, readonly"></textarea></div><div class="next-button invisible" data-wbtools="bind:setReady, shownext" data-labels="bind:innerHTML, nextbutton" data-quickscenarioevent="listen: touchstart, press; listen:touchend, next"></div></div></div>',y.place(t.get("quickscenario")),y.press=function(e,t){t.classList.add("pressed")},y.next=function(e,t){O.spin(t.parentNode),t.classList.add("invisible"),t.classList.remove("pressed"),"step"===P?(P="screen",clearInterval(w),A.set("display",!0),g.set("scenario",JSON.parse(I.toJSON())),y.updateSessionScore(A.get("timer")).then(function(){return p.unsync(),p.sync(n.get("db"),p.get("_id"))}).then(function(){var e=p.get("elapsedTimers");e.quickscenario=A.get("timer"),p.set("scenario",[JSON.parse(I.toJSON())]),p.set("elapsedTimers",e),M.set("readonly",!0),h("quickscenario")})):h("quickscenario")},y.stopSpinner=function(){O.stop(),y.dom.querySelector(".next-button").classList.remove("invisible")},y.prev=function(e,t){t.classList.remove("pressed"),m("quickscenario")},y.toggleProgress=function(){v()},y.toggleTimer=function(){A.set("display",!A.get("display"))},y.push=function(e,t){var i=t.getAttribute("name");M.set(i,"active")},y.zoom=function(e,t){var i=t.getAttribute("name");y.setPopup(i)},y.setPopup=function(e){var t,i={x:147,y:130},s="left",a=x.get(e),o=M.get("cardpopup"),c="";f&&(o[f]=!1),o[e]=!0,M.set("cardpopup",o),f=e,"char"===e&&(i.y=120,a.id===S.get("_id")&&(c=S.toJSON())),"context"===e&&(i.y=290,a.id===k.get("_id")&&(c=k.toJSON())),"problem"===e&&(i.y=350,a.id===T.get("_id")&&(c=T.toJSON())),c?b.reset(c,i,s,document.getElementById("quickscenario-popup")):(t=new r,t.setTransport(C),t.sync(n.get("db"),a.id).then(function(){c=t.toJSON(),b.reset(c,i,s,document.getElementById("quickscenario-popup")),"char"===e&&S.reset(JSON.parse(t.toJSON())),"context"===e&&k.reset(JSON.parse(t.toJSON())),"problem"===e&&T.reset(JSON.parse(t.toJSON()))}))},y.closePopup=function(){var e=M.get("cardpopup");e[f]=!1,M.set("cardpopup",e),f=""},b=new o(y.closePopup),y.post=function(){_.selectScreen("postit"),M.set("import","inactive"),M.set("drawing","inactive")},y.importpic=function(){_.selectScreen("import"),M.set("postit","inactive"),M.set("drawing","inactive")},y.draw=function(){_.selectScreen("drawing"),M.set("import","inactive"),M.set("postit","inactive")},y.exitTool=function(e){M.set(e,"inactive")},y.finish=function(e,t){_.setReadonly(!0),M.set("ready",!1),M.set("showstory",!0),t.classList.remove("pressed")},y.updateSessionScore=function(e){var t=new d,i={sid:p.get("_id"),step:"quickscenario",time:e,wbcontent:H.toJSON(),scenario:I.toJSON()};return C.request("UpdateSessionScore",i,function(e){"ok"===e.res?t.fulfill():t.reject()}),t},y.reset=function(){M.reset({cardpopup:{"char":!1,context:!1,problem:!1},postit:"inactive","import":"inactive",drawing:"inactive",ready:!1,showstory:!1,shownext:!1,readonly:!1}),_.setSessionId(p.get("_id")),H.reset(p.get("scenarioWB")),H.getNbItems()?_.selectScreen("main"):_.selectScreen("default"),p.get("scenario").length?(P="screen",M.set("ready",!1),M.set("showstory",!0),_.setReadonly(!0),I.reset(p.get("scenario")[0]),g.set("scenario",p.get("scenario")[0]),M.set("readonly",!0),M.set("shownext",!0)):(I.reset({title:"",story:"",solution:""}),H.getNbItems()?M.set("ready",!0):M.set("ready",!1),_.setReadonly(!1),P="step"),p.get("elapsedTimers").quickscenario&&(N=p.get("elapsedTimers").quickscenario,A.set("timer",N)),"screen"===P?A.set("display",!0):y.initTimer(N)},y.initTimer=function(e){var t=new Date,i=t.getTime(),s=e||0;A.set("display",!1),A.set("timer",s),"quickscenario"===p.get("step")&&(clearInterval(w),w=setInterval(function(){var e=new Date;A.set("timer",s+e.getTime()-i)},1e3))},g.watchValue("characters",function(e){x.set("char",e)}),g.watchValue("contexts",function(e){x.set("context",e)}),g.watchValue("problems",function(e){x.set("problem",e)}),p.watchValue("_id",function(e){_.setSessionId(e)}),["added","deleted","updated"].forEach(function(e){H.watch(e,function(){JSON.stringify(p.get("scenarioWB"))!==H.toJSON()&&(p.set("scenarioWB",JSON.parse(H.toJSON())),p.upload()),H.getNbItems()&&"step"===P?M.set("ready",!0):M.set("ready",!1)})}),I.watch("updated",function(){I.get("title")&&I.get("story")&&I.get("solution")?M.set("shownext",!0):M.set("shownext",!1)}),y}});