/**
 * https://github.com/TAIAUT/Ideafy
 * Proprietary License - All rights reserved
 * Author: Vincent Weyl <vincent.weyl@taiaut.com>
 * Copyright (c) 2012-2013 TAIAUT
 */

define(["OObject","Bind.plugin","Event.plugin","Amy/Stack-plugin","service/config","Store","CouchDBDocument","./editchar","./editcard","./importcard","Promise"],function(e,t,n,r,i,s,o,u,a,f,l){return function(h){var p=new e,d=new r,v=new s;return cardCDB=new o,labels=i.get("labels"),user=i.get("user"),transport=i.get("transport"),close=function(){p.dom.classList.add("invisible")},updateDeck=function(e,t){var n=new l,r=v.get("deckId"),s=new o,u="characters";switch(e){case 1:u="characters";break;case 2:u="contexts";break;case 3:u="problems";break;case 4:u="techno";break;default:console.log("no type detected")}return s.setTransport(transport),s.sync(i.get("db"),r).then(function(){var e=new Date,n=s.get("content"),r=n[u];return r.indexOf(t)<0&&(r.push(t),n[u]=r,s.set("content",n)),s.set("last_updated",[e.getFullYear(),e.getMonth(),e.getDate()]),s.upload()}).then(function(){s.unsync(),h("updated",r,e),n.fulfill()}),n},removeCard=function(e){var t=new o,n=new l;return t.setTransport(transport),t.sync(i.get("db"),e).then(function(){var e=t.get("deck")||[],n=new l;return e.splice(e.indexOf(v.get("deckId")),1),e.length?(t.set("deck",e),t.upload().then(function(){n.fulfill()})):(file.search("img/decks")===-1&&(json={type:"card",file:file},transport.request("DeleteAttachment",json,function(e){e!=="ok"&&console.log(e)})),t.remove().then(function(){n.fulfill()})),n}).then(function(){return n}),n},addToDeck=function(e){var t=new o,n=new l;return t.setTransport(transport),t.sync(i.get("db"),e).then(function(){var e=t.get("deck")||[],n=v.get("deckId");return e.indexOf(n)<0&&e.push(n),t.set("deck",e),t.upload()}).then(function(){n.fulfill(),t.unsync()}),n},updateImport=function(e){var t=new l,n=v.get("deckId"),r=new o,s=[],u=[],a=new Date;return r.setTransport(transport),r.sync(i.get("db"),n).then(function(){var t={},n={characters:e.characters.concat(),contexts:e.contexts.concat(),problems:e.problems.concat(),techno:e.techno.concat()},i,o=!1;return r.get("translations")?i=r.get("translations"):i={},i.hasOwnProperty(user.get("lang"))&&(o=!0),o?(["characters","contexts","problems","techno"].forEach(function(e){t[e]=i[user.get("lang")].content[e].concat()}),i[user.get("lang")].content=n,r.set("translations",i)):(["characters","contexts","problems","techno"].forEach(function(e){t[e]=r.get("content")[e].concat()}),r.set("content",n)),["characters","contexts","problems","techno"].forEach(function(e){var r=t[e],i=n[e],o,a,f,l;for(o=0,l=r.length;o<l;o++)i.indexOf(r[o])<0&&u.push(r[o]);for(a=0,f=i.length;a<f;a++)r.indexOf(i[a])<0&&s.push(i[a])}),s.forEach(function(e){addToDeck(e)}),u.forEach(function(e){removeCard(e)}),(s.length||u.length)&&r.set("last_updated",[a.getFullYear(),a.getMonth(),a.getDate()]),r.upload()}).then(function(){h("updated",n,null),t.fulfill()}),t},editCard=new a(updateDeck,close),editChar=new u(updateDeck,close),importCard=new f(updateImport,close),p.template='<div id="card_creation" class="invisible"><div class="header blue-dark" data-label="bind: innerHTML, cardeditor"></div><div class="create_header"><label data-label="bind:innerHTML, createnew"></label><select class="changetype" data-setup="bind: selectedIndex, type" data-newcardevent="listen: change, changeType"><option data-label="bind:innerHTML, char"></option><option data-label="bind:innerHTML, context"></option><option data-label="bind:innerHTML, problem"></option><option data-label="bind:innerHTML, techno"></option><option data-label="bind:innerHTML, importcard"></option></select></div><div class="createcontentstack" data-newcardcontentstack="destination"></div></div>',p.plugins.addAll({label:new t(labels),setup:new t(v),newcardcontentstack:d,newcardevent:new n(p)}),p.close=close,p.reset=function(t,n,r,i){document.getElementById("card_creation").classList.remove("invisible"),v.reset({deckId:r,title:i,type:["characters","contexts","problems","techno"].indexOf(n)}),n==="characters"?(editChar.reset(r,t),d.getStack().show("editchar")):(editCard.reset(r,t,n),d.getStack().show("editcard"))},p.press=function(e,t){t.classList.add("pressed")},p.changeType=function(e,t){var n=t.selectedIndex;n===4?(importCard.reset(v.get("deckId")),d.getStack().show("importcard")):n===0?(editChar.reset(v.get("deckId"),"newcard"),d.getStack().show("editchar")):(editCard.reset(v.get("deckId"),"newcard",v.get("type")),d.getStack().show("editcard"),editCard.changeType(n))},p.init=function(){d.getStack().add("editchar",editChar),d.getStack().add("editcard",editCard),d.getStack().add("importcard",importCard)},p.init(),p}});