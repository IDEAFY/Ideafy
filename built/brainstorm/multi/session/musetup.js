/**
 * https://github.com/TAIAUT/Ideafy
 * Proprietary License - All rights reserved
 * Author: Vincent Weyl <vincent.weyl@taiaut.com>
 * Copyright (c) 2012-2013 TAIAUT
 */

define(["OObject","service/map","Bind.plugin","Place.plugin","Event.plugin","service/config","CouchDBDocument","Store","Promise","service/cardpopup","service/help","service/utils","lib/spin.min","./mubchat"],function(e,t,i,s,n,a,r,o,l,d,c,u,p,g){return function(t,m,v,h,b){var f,w,y=new e,S=new g,L=a.get("labels"),k=a.get("transport"),T=a.get("db"),x=a.get("user"),I={},A=new o({timer:null,display:!1}),M=new o({"char":{selected:!1,left:null,popup:!1},context:{selected:!1,left:null,popup:!1},problem:{selected:!1,left:null,popup:!1}}),_=new o({"char":{id:"",title:L.get("char"),pic:""},context:{id:"",title:L.get("context"),pic:""},problem:{id:"",title:L.get("problem"),pic:""}}),C={"char":0,context:0,problem:0},q=!0,H={"char":new o,context:new o,problem:new o},N="",P=0,D="step",O=new p({color:"#657B99",lines:10,length:8,width:4,radius:8,top:337,left:490}).spin(),B={};return y.plugins.addAll({labels:new i(L),musetup:new i(M,{setReload:function(e){0===e?this.classList.add("reload"):this.classList.remove("reload")},updateNext:function(){"step"===D&&M.get("char").selected&&M.get("context").selected&&M.get("problem").selected&&x.get("_id")===t.get("initiator").id?this.classList.remove("invisible"):this.classList.add("invisible")},popup:function(e){e?this.classList.add("highlighted"):this.classList.remove("highlighted")},setSelected:function(e){e?this.classList.add("pushed"):this.classList.remove("pushed")}}),musetuptimer:new i(A,{setTime:function(e){e&&(this.innerHTML=u.formatDuration(e))},displayTimer:function(e){e?this.classList.add("showtimer"):this.classList.remove("showtimer")}}),musetupcards:new i(_,{removeDefault:function(e){e?this.classList.remove("defaultcard"):this.classList.add("defaultcard")},formatTitle:function(e){this.innerHTML=e?e.substring(0,1).toUpperCase()+e.substring(1).toLowerCase():e},setPic:function(e){var t=this;e?e.search("img/decks")>-1?this.setAttribute("style","background-image:url('"+e+"');"):(json={dir:"cards",filename:e},a.get("transport").request("GetFile",json,function(e){t.setAttribute("style","background:white; background-image: url('"+e+"'); background-repeat: no-repeat; background-position: center center; background-size:contain;")})):this.setAttribute("style","background-image: none;")}}),place:new s({chat:S}),musetupevent:new n(y)}),y.template='<div id = "musetup"><div class="previousbutton" data-musetupevent="listen: touchstart, press; listen: touchstart, prev"></div><div id="musetup-popup" class="invisible"></div><div class="brainstorm-header header blue-light" data-labels="bind: innerHTML, musetup" data-musetupevent="listen:touchstart, toggleProgress"></div><div class="timer" data-musetuptimer="bind:setTime, timer; bind: displayTimer, display" data-musetupevent="listen:touchstart,toggleTimer"></div><div class="help-brainstorm" data-musetupevent="listen:touchstart, help"></div><div class="drawarea"><div class="decks"><div class="drawbutton drawchar" name="char" data-musetupevent="listen: touchstart, push; listen:touchend, draw" data-musetup="bind: setReload, char.left"></div><div class="drawbutton drawcontext" name="context" data-musetupevent="listen: touchstart, push; listen:touchend, draw" data-musetup="bind:setReload, context.left"></div><div class="drawbutton drawproblem" name="problem" data-musetupevent="listen: touchstart, push; listen:touchend, draw" data-musetup="bind:setReload, problem.left"></div></div><div class="cards"><div class="card char defaultcard" name="char" data-musetupevent="listen:touchstart, zoom" data-musetupcards="bind:removeDefault, char.pic" data-musetup="bind: popup, char.popup"><div class="cardpicture" data-musetupcards="bind: setPic, char.pic"></div><div class="cardtitle" data-musetupcards="bind:formatTitle, char.title">Character</div></div><div class="card context defaultcard" name="context" data-musetupevent="listen:touchstart, zoom" data-musetupcards="bind:removeDefault, context.pic" data-musetup="bind: popup, context.popup"><div class="cardpicture" data-musetupcards="bind: setPic, context.pic"></div><div class="cardtitle" data-musetupcards="bind:formatTitle, context.title">Context</div></div><div class="card problem defaultcard" name="problem" data-musetupevent="listen:touchstart, zoom" data-musetupcards="bind:removeDefault, problem.pic" data-musetup="bind: popup, problem.popup"><div class="cardpicture" data-musetupcards="bind: setPic, problem.pic"></div><div class="cardtitle" data-musetupcards="bind:formatTitle, problem.title">Problem</div></div></div><div class="confirmdraw"><div class="drawok" name="char" data-musetup="bind:setSelected, char.selected" data-musetupevent="listen: touchstart, pushOk; listen:touchend, accept"></div><div class="drawok" name="context" data-musetup="bind:setSelected, context.selected" data-musetupevent="listen: touchstart, pushOk; listen:touchend, accept"></div><div class="drawok" name="problem" data-musetup="bind:setSelected, problem.selected" data-musetupevent="listen: touchstart, pushOk; listen:touchend, accept"></div></div><div class="next-button invisible" data-labels="bind:innerHTML, nextbutton" data-musetupevent="listen: touchstart, press; listen:touchend, next" data-musetup="bind:updateNext, char.selected;bind:updateNext, context.selected;bind:updateNext, problem.selected"></div></div><div class="sessionchat" data-place="place:chat"></div></div>',y.press=function(e,t){t.classList.add("pressed")},y.next=function(e,i){O.spin(i.parentNode),i.classList.add("invisible"),i.classList.remove("pressed"),"step"===D?(D="screen",m.set("characters",_.get("char")),m.set("contexts",_.get("context")),m.set("problems",_.get("problem")),clearInterval(w),A.set("display",!0),y.updateSessionScore(A.get("timer")).then(function(){return t.unsync(),t.sync(a.get("db"),t.get("_id"))}).then(function(){S.conclude("next"),t.set("elapsedTimers",{musetup:A.get("timer")}),t.set("characters",[_.get("char").id]),t.set("contexts",[_.get("context").id]),t.set("problems",[_.get("problem").id]),h("musetup")})):h("musetup")},y.stopSpinner=function(){O.stop()},y.help=function(){c.setContent("musetuphelp"),document.getElementById("cache").classList.add("appear"),document.getElementById("help-popup").classList.add("appear")},y.prev=function(e,t){t.classList.remove("pressed"),v("musetup")},y.toggleProgress=function(){b()},y.toggleTimer=function(){t.get("initiator").id===x.get("_id")&&A.set("display",!A.get("display"))},y.push=function(e,i){"screen"!==D&&x.get("_id")===t.get("initiator").id&&i.classList.add("pushed")},y.draw=function(e,i){var s=i.getAttribute("name"),n=M.get(s);_now=new Date,x.get("_id")===t.get("initiator").id&&"step"===D&&q&&(q=!1,0===n.left&&(I[s]=m.get("deck")[s].concat(),n.left=I[s].length,M.set(s,n)),n.selected?(q=!0,alert("please unlock selected card first")):n.selected===!1?y.drawCard(s).then(function(){var e=!1;i.classList.remove("pushed"),q=!0,M.loop(function(t){t.popup===!0&&(e=!0)}),e&&y.setPopup(s)}):(i.classList.remove("pushed"),q=!0))},y.pushOk=function(e,i){var s=B[i.getAttribute("name")]||null;x.get("_id")===t.get("initiator").id&&"step"===D&&(s?B[i.getAttribute("name")].spin(i):B[i.getAttribute("name")]=(new p).spin(i))},y.accept=function(e,i){var s=i.getAttribute("name"),n=M.get(s);"step"===D&&t.get("initiator").id===x.get("_id")&&(n.selected=_.get(s).id?!n.selected:!1,t.unsync(),t.sync(a.get("db"),t.get("_id")).then(function(){return t.set("selected_"+s,n.selected),t.upload()}).then(function(){B[i.getAttribute("name")].stop(),selection.set(s,n)}))},y.zoom=function(e,t){var i=t.getAttribute("name");y.setPopup(i)},y.setPopup=function(e){var t={x:0,y:257},i="left",s=M.get(N)||"",n=M.get(e);s&&(s.popup=!1,M.set(N,s)),n.popup=!0,M.set(e,n),N=e,"char"===e&&(t.x=382),"context"===e&&(t.x=102,i="right"),"problem"===e&&(t.x=249,i="right"),H[e].getNbItems()&&f.reset(H[e].toJSON(),t,i,document.getElementById("musetup-popup"))},y.closePopup=function(){var e=M.get(N);e.popup=!1,M.set(N,e),N=""},f=new d(y.closePopup),y.getChatUI=function(){return S},y.initTimer=function(e){var i=new Date,s=i.getTime(),n=e||0;A.set("timer",n),"musetup"===t.get("step")&&(clearInterval(w),w=setInterval(function(){var e=new Date;A.set("timer",n+e.getTime()-s)},1e3))},y.reset=function(e){S.clear(),t.get("chat")[1]&&S.reset(t.get("chat")[1]),e?(D="screen",S.dom.querySelector(".chatread").classList.add("extended"),P=t.get("elapsedTimers").musetup||0,M.reset({"char":{selected:!0,left:1,popup:!1},context:{selected:!0,left:1,popup:!1},problem:{selected:!0,left:1,popup:!1}}),N="",A.set("timer",P),A.set("display",!0),t.get("characters").length&&y.getDeck(t.get("deck")).then(function(){return y.getCard(t.get("characters")[0],H.char)}).then(function(){var e=H.char;return _.set("char",{id:e.get("_id"),title:e.get("title"),pic:e.get("picture_file")}),m.set("characters",_.get("char")),y.getCard(t.get("contexts")[0],H.context)}).then(function(){var e=H.context;return _.set("context",{id:e.get("_id"),title:e.get("title"),pic:e.get("picture_file")}),m.set("contexts",_.get("context")),y.getCard(t.get("problems")[0],H.problem)}).then(function(){var e=H.problem;_.set("problem",{id:e.get("_id"),title:e.get("title"),pic:e.get("picture_file")}),m.set("problems",_.get("problem"))})):y.init()},y.getDeck=function(e){var t=new l,i=new r;return i.setTransport(k),i.sync(T,e).then(function(){var e,s={},n=a.get("user").get("lang");e=i.get("default_lang")&&i.get("default_lang")!==n?i.get("translations")&&i.get("translations")[n]?i.get("translations")[n]:JSON.parse(i.toJSON()):JSON.parse(i.toJSON()),s.char=e.content.characters,s.context=e.content.contexts,s.problem=e.content.problems,s.techno=e.content.techno,["char","context","problem","techno"].forEach(function(e){"newcard"===s[e][0]&&s[e].shift()}),m.set("deck",s),t.fulfill(),i.unsync()}),t},y.getCard=function(e,t){var i=new l,s=new r;return s.setTransport(k),s.sync(T,e).then(function(){t.reset(JSON.parse(s.toJSON())),i.fulfill(),s.unsync()}),i},y.drawCard=function(e){var i=new l,s=Math.floor(Math.random()*I[e].length),n=I[e][s];return t.set("drawn_"+e,n),t.upload().then(function(){C[e]++,I[e].splice(s,1),i.fulfill()}),i},y.updateDrawnCard=function(e,t){var i,s,n=new l;return e&&t&&(i=M.get(e),s=_.get(e),y.getCard(t,H[e]).then(function(){var a=H[e];s.id=t,s.title=a.get("title"),s.pic=a.get("picture_file"),_.set(e,s),i.left=I[e].length,M.set(e,i),n.fulfill()})),n},y.updateSessionScore=function(e){var i=new l,s={sid:t.get("_id"),step:"musetup",time:e,cards:C.char+C.context+C.problem};return k.request("UpdateSessionScore",s,function(e){"ok"===e.res?i.fulfill():i.reject()}),i},y.init=function(){_.reset({"char":{id:"",title:L.get("char"),pic:""},context:{id:"",title:L.get("context"),pic:""},problem:{id:"",title:L.get("problem"),pic:""}}),M.reset({"char":{selected:!1,left:null,popup:!1},context:{selected:!1,left:null,popup:!1},problem:{selected:!1,left:null,popup:!1}}),C.char=0,C.context=0,C.problem=0,H={"char":new o,context:new o,problem:new o},N="",x.get("_id")===t.get("initiator").id?y.getDeck(t.get("deck")).then(function(){var e=m.get("deck");I.char=e.char.concat(),I.context=e.context.concat(),I.problem=e.problem.concat(),q=!0,y.initTimer()}):A.set("display",!1),D="step"},t.watchValue("drawn_char",function(e){e&&y.updateDrawnCard("char",e)}),t.watchValue("drawn_context",function(e){e&&y.updateDrawnCard("context",e)}),t.watchValue("drawn_problem",function(e){e&&y.updateDrawnCard("problem",e)}),t.watchValue("selected_char",function(e){var t;t=M.get("char"),t.selected=e,M.set("char",t),e&&m.set("characters",_.get("char"))}),t.watchValue("selected_context",function(e){var t;t=M.get("context"),t.selected=e,M.set("context",t),e&&m.set("contexts",_.get("context"))}),t.watchValue("selected_problem",function(e){var t;t=M.get("problem"),t.selected=e,M.set("problem",t),e&&m.set("problems",_.get("problem"))}),t.watchValue("elapsedTimers",function(e){e.musetup&&(A.set("timer",e.musetup),A.set("display",!0))}),y}});